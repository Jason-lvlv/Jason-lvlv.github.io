(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-ffb3e064"],{"34e5":function(e,t,n){"use strict";n.d(t,"f",(function(){return p})),n.d(t,"a",(function(){return c})),n.d(t,"b",(function(){return d})),n.d(t,"c",(function(){return l})),n.d(t,"d",(function(){return y})),n.d(t,"e",(function(){return m}));var a=n("1da1"),i=(n("96cf"),n("d3b7"),n("25f0"),n("b893")),s=n("b292"),r=n("56f5"),o=n("511e"),u=n("b569"),p=function(e){console.log("receiveAirdrop",e);var t=__ownInstance__.$store.state.base.address,n=__ownInstance__.$store.state.base.airdropAddress,i=new web3.eth.Contract(s,n),r=i.methods.draw(e).encodeABI(),o=(new Date).getTime().toString();return __ownInstance__.$store.dispatch("createOrderForm",{val:0,id:o}),new Promise((function(e,i){var s;web3.eth.getTransactionCount(t).then(function(){var u=Object(a["a"])(regeneratorRuntime.mark((function a(u){var p,c,d;return regeneratorRuntime.wrap((function(a){while(1)switch(a.prev=a.next){case 0:return a.next=2,web3.eth.getGasPrice();case 2:return p=a.sent,a.next=5,web3.eth.estimateGas({from:t,to:n,data:r});case 5:c=a.sent,console.log("estimateGas",c),d=[{from:t,to:n,data:r,gasPrice:web3.utils.toHex(p),gas:web3.utils.toHex(c)}],web3.eth.sendTransaction(d[0]).on("transactionHash",(function(e){console.log("hash",e),e&&(s=e)})).on("receipt",(function(t){__ownInstance__.$store.dispatch("getAirdropValue"),__ownInstance__.$store.dispatch("getAirDropDrawed"),__ownInstance__.$store.dispatch("changeTradeStatus",{id:o,val:1,hash:s}),e(s)})).on("confirmation",(function(e,t){})).on("error",(function(e){var t=4001===e.code;__ownInstance__.$store.dispatch("changeTradeStatus",{id:o,val:2,isUserDeny:t,hash:s}),console.log("err",e),i(e)}));case 9:case"end":return a.stop()}}),a)})));return function(e){return u.apply(this,arguments)}}()).catch((function(e){console.log("receiveAirdrop_err",e),__ownInstance__.$store.dispatch("changeTradeStatus",{id:o,val:2,hash:s}),i(e)}))}))},c=function(e,t,n,s){var o=__ownInstance__.$store.state.base.address,u=n&&s?web3.utils.toHex(Object(i["e"])(n,s)):web3.utils.toHex(Object(i["f"])(1.157920892373163*Math.pow(10,59))),p=new web3.eth.Contract(r,e),c=t||__ownInstance__.$store.state.base.bankAddress,d=p.methods.approve(c,u).encodeABI();return new Promise((function(t,n){web3.eth.getTransactionCount(o).then(function(){var i=Object(a["a"])(regeneratorRuntime.mark((function a(i){var s,r;return regeneratorRuntime.wrap((function(a){while(1)switch(a.prev=a.next){case 0:return a.next=2,web3.eth.getGasPrice();case 2:s=a.sent,r=[{chainId:__ownInstance__.$store.state.base.chainId,nonce:web3.utils.toHex(i),gasLimit:web3.utils.toHex(6e6),gasPrice:web3.utils.toHex(s),to:e,from:o,data:d}],ethereum.request({method:"eth_sendTransaction",params:r}).then((function(e){t(e)})).catch((function(e){n(e)}));case 5:case"end":return a.stop()}}),a)})));return function(e){return i.apply(this,arguments)}}())}))},d=function(e,t,n){console.log("depositPutIn",n);var s=__ownInstance__.$store.state.base.address,r=__ownInstance__.$store.state.base.bankAddress,u=new web3.eth.Contract(o,r),p=Object(i["e"])(n,t),c=u.methods.deposit(e,web3.utils.toHex(p)).encodeABI(),d=(new Date).getTime().toString();return __ownInstance__.$store.dispatch("createOrderForm",{val:0,id:d}),new Promise((function(e,t){var n;web3.eth.getTransactionCount(s).then(function(){var i=Object(a["a"])(regeneratorRuntime.mark((function a(i){var o,u,p;return regeneratorRuntime.wrap((function(a){while(1)switch(a.prev=a.next){case 0:return a.next=2,web3.eth.getGasPrice();case 2:return o=a.sent,a.next=5,web3.eth.estimateGas({from:s,to:r,data:c});case 5:u=a.sent,console.log("estimateGas",u),p=[{from:s,to:r,data:c,gasPrice:web3.utils.toHex(o),gas:web3.utils.toHex(u)}],web3.eth.sendTransaction(p[0]).on("transactionHash",(function(e){console.log("hash",e),e&&(n=e)})).on("receipt",(function(t){__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:1,hash:n}),e(n)})).on("confirmation",(function(e,t){})).on("error",(function(e){var a=4001===e.code;__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:2,isUserDeny:a,hash:n}),console.log("err",e),t(e)}));case 9:case"end":return a.stop()}}),a)})));return function(e){return i.apply(this,arguments)}}()).catch((function(e){console.log("receiveAirdrop_err",e),__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:2,hash:n}),t(e)}))}))},l=function(e,t,n){console.log("depositPutOut",n);var s=__ownInstance__.$store.state.base.address,r=__ownInstance__.$store.state.base.bankAddress,u=new web3.eth.Contract(o,r),p=Object(i["e"])(n,t),c=u.methods.withdraw(e,web3.utils.toHex(p)).encodeABI(),d=(new Date).getTime().toString();return __ownInstance__.$store.dispatch("createOrderForm",{val:0,id:d}),new Promise((function(e,t){var n;web3.eth.getTransactionCount(s).then(function(){var i=Object(a["a"])(regeneratorRuntime.mark((function a(i){var o,u,p;return regeneratorRuntime.wrap((function(a){while(1)switch(a.prev=a.next){case 0:return a.next=2,web3.eth.getGasPrice();case 2:return o=a.sent,a.next=5,web3.eth.estimateGas({from:s,to:r,data:c});case 5:u=a.sent,console.log("estimateGas",u),p=[{from:s,to:r,data:c,gasPrice:web3.utils.toHex(o),gas:web3.utils.toHex(u)}],web3.eth.sendTransaction(p[0]).on("transactionHash",(function(e){console.log("hash",e),e&&(n=e)})).on("receipt",(function(t){__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:1,hash:n}),e(n)})).on("confirmation",(function(e,t){})).on("error",(function(e){var a=4001===e.code;__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:2,isUserDeny:a,hash:n}),console.log("err",e),t(e)}));case 9:case"end":return a.stop()}}),a)})));return function(e){return i.apply(this,arguments)}}()).catch((function(e){console.log("receiveAirdrop_err",e),__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:2,hash:n}),t(e)}))}))},y=function(e,t,n){console.log("depositPutIn",n);var s=__ownInstance__.$store.state.base.address,r=__ownInstance__.$store.state.base.fairLaunchAddress,o=new web3.eth.Contract(u,r),p=Object(i["e"])(n,t),c=o.methods.deposit(e,"0x0",web3.utils.toHex(p)).encodeABI(),d=(new Date).getTime().toString();return __ownInstance__.$store.dispatch("createOrderForm",{val:0,id:d}),new Promise((function(e,t){var n;web3.eth.getTransactionCount(s).then(function(){var i=Object(a["a"])(regeneratorRuntime.mark((function a(i){var o,u;return regeneratorRuntime.wrap((function(a){while(1)switch(a.prev=a.next){case 0:return a.next=2,web3.eth.getGasPrice();case 2:o=a.sent,u=[{from:s,to:r,data:c,gasPrice:web3.utils.toHex(o),gas:web3.utils.toHex(4e6)}],web3.eth.sendTransaction(u[0]).on("transactionHash",(function(e){console.log("hash",e),e&&(n=e)})).on("receipt",(function(t){__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:1,hash:n}),e(n)})).on("confirmation",(function(e,t){})).on("error",(function(e){var a=4001===e.code;__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:2,isUserDeny:a,hash:n}),console.log("err",e),t(e)}));case 5:case"end":return a.stop()}}),a)})));return function(e){return i.apply(this,arguments)}}()).catch((function(e){console.log("receiveAirdrop_err",e),__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:2,hash:n}),t(e)}))}))},m=function(e,t,n){console.log("depositPutIn",n),console.log("tokenAddress",e);var s=__ownInstance__.$store.state.base.address,r=__ownInstance__.$store.state.base.fairLaunchAddress,o=new web3.eth.Contract(u,r),p=Object(i["e"])(n,t),c=o.methods.withdraw(e,"0x0",web3.utils.toHex(p)).encodeABI(),d=(new Date).getTime().toString();return __ownInstance__.$store.dispatch("createOrderForm",{val:0,id:d}),new Promise((function(e,t){var n;web3.eth.getTransactionCount(s).then(function(){var i=Object(a["a"])(regeneratorRuntime.mark((function a(i){var o,u;return regeneratorRuntime.wrap((function(a){while(1)switch(a.prev=a.next){case 0:return a.next=2,web3.eth.getGasPrice();case 2:o=a.sent,u=[{from:s,to:r,data:c,gasPrice:web3.utils.toHex(o),gas:web3.utils.toHex(4e5)}],web3.eth.sendTransaction(u[0]).on("transactionHash",(function(e){console.log("hash",e),e&&(n=e)})).on("receipt",(function(t){__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:1,hash:n}),e(n)})).on("confirmation",(function(e,t){})).on("error",(function(e){var a=4001===e.code;__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:2,isUserDeny:a,hash:n}),console.log("err",e),t(e)}));case 5:case"end":return a.stop()}}),a)})));return function(e){return i.apply(this,arguments)}}()).catch((function(e){console.log("receiveAirdrop_err",e),__ownInstance__.$store.dispatch("changeTradeStatus",{id:d,val:2,hash:n}),t(e)}))}))}},b569:function(e){e.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"_rabbit","type":"address"},{"internalType":"address","name":"_devaddr","type":"address"},{"internalType":"uint256","name":"_rabbitPerBlock","type":"uint256"},{"internalType":"uint256","name":"_startBlock","type":"uint256"},{"internalType":"uint256","name":"_bonusEndBlock","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"EmergencyWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"ManualMint","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"devAddr","type":"address"}],"name":"SetDevAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"rabbitPerBlock","type":"uint256"}],"name":"SetRabbitPerBlock","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"pid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"address","name":"_stakeToken","type":"address"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"addPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"bonusEndBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"bonusMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_for","type":"address"},{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"devaddr","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"_currentBlock","type":"uint256"}],"name":"getMultiplier","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"harvest","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_stakeToken","type":"address"}],"name":"isDuplicatedPool","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"manualMint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"massUpdatePools","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"address","name":"_user","type":"address"}],"name":"pendingRabbit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"poolInfo","outputs":[{"internalType":"address","name":"stakeToken","type":"address"},{"internalType":"uint256","name":"allocPoint","type":"uint256"},{"internalType":"uint256","name":"lastRewardBlock","type":"uint256"},{"internalType":"uint256","name":"accRabbitPerShare","type":"uint256"},{"internalType":"uint256","name":"accRabbitPerShareTilBonusEnd","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"poolLength","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rabbit","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rabbitPerBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_bonusMultiplier","type":"uint256"},{"internalType":"uint256","name":"_bonusEndBlock","type":"uint256"}],"name":"setBonus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_devaddr","type":"address"}],"name":"setDev","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_allocPoint","type":"uint256"},{"internalType":"bool","name":"_withUpdate","type":"bool"}],"name":"setPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_rabbitPerBlock","type":"uint256"}],"name":"setRabbitPerBlock","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"startBlock","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalAllocPoint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"updatePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userInfo","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"rewardDebt","type":"uint256"},{"internalType":"uint256","name":"bonusDebt","type":"uint256"},{"internalType":"address","name":"fundedBy","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_for","type":"address"},{"internalType":"uint256","name":"_pid","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_for","type":"address"},{"internalType":"uint256","name":"_pid","type":"uint256"}],"name":"withdrawAll","outputs":[],"stateMutability":"nonpayable","type":"function"}]')}}]);